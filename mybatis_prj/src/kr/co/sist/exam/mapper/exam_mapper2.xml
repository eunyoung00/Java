<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.sist.exam2">
<!-- Diary List에 대한 Mapper 설정 -->
<resultMap type="kr.co.sist.exam.domain.DiaryList" id="dlResult">
	<result column="num" property="num"/>
	<result column="subject" property="subject"/>
	<result column="writer" property="writer"/>
	<result column="evt_date" property="evt_date"/>
	<result column="w_date" property="w_date"/>
</resultMap>

<!-- Union에서 사용되는 resultMap -->
<resultMap type="kr.co.sist.exam.domain.Union" id="unionResult">
	<result column="empno" property="empno"/>
	<result column="sal" property="sal"/>
	<result column="deptno" property="deptno"/>
	<result column="ename" property="ename"/>
	<result column="job" property="job"/>
	<result column="hiredate" property="hiredate"/>
	<result column="retired" property="retired"/>
</resultMap>

<!-- Join resultMap -->
<resultMap type="kr.co.sist.exam.domain.EmpJoin" id="empResult">
	<result column="empno" property="empno"/>
	<result column="ename" property="ename"/>
	<result column="sal" property="sal"/>
	<result column="hiredate" property="hiredate"/>
	<result column="deptno" property="deptno"/>
	<result column="dname" property="dname"/>
	<result column="loc" property="loc"/>
</resultMap>

<!-- Car resultMap: 컬럼명과 setter method명이 다른경우에 주의하여(명시에 주의) 사용!!!=>같게 만드는게 훨씬 편하다. -->
<resultMap type="kr.co.sist.exam.domain.Car" id="carResult">
	<result  column="car_img" property="img"/>
	<result  column="maker" property="maker"/>
	<result  column="model" property="model"/>
	<result  column="car_year" property="carYear"/>
	<result  column="price" property="price"/>
	<result  column="car_option" property="carOption"/>
</resultMap>



<select id="diaryCnt" resultType="int">
	select count(*) cnt from diary
</select>
<!-- subquery의 조회 
	 diary 테이블에서 가장 마지막 글에서 부터 시작번호와 끝번호 사이의 글을 조회
-->
<select id="subquery" resultMap="dlResult" parameterType="kr.co.sist.exam.vo.DiaryListParamVO">
	select r_num,num,subject,writer, e_year||'-'||e_month||'-'||e_day evt_date,
			to_char(w_date,'yyyy-mm-dd hh24:mi') w_date
	from (select num,subject,writer,e_year,e_month,e_day, w_date, row_number() over(order by w_date desc) r_num
			from diary)
	where r_num between #{startNum} and #{endNum} 
</select>
  
<!-- union의 조회 : 퇴사한 사원과 재직중인 사원을 구분하여 조회-->
<select id="union" resultMap="unionResult" >
	select empno,ename,job,sal,to_char(hiredate,'yyyy-mm-dd') hiredate,deptno,retired	
	from union_test
	where retired='N'
	union all
	select empno,ename,job,sal,to_char(hiredate,'yyyy-mm-dd') hiredate,deptno,retired	
	from union_test
	where retired='Y'
</select>
  
<!-- join의 조회 : 매니저 번호를 입력받아 매니저가 관리하는 사원들의 사원번호,사원명,연봉,입사일,부서번호,부서명,위치를 조회 -->
<select id="join" resultMap="empResult" parameterType="Integer">
	select e.empno,e.ename,e.sal,e.hiredate,d.deptno,d.dname,d.loc
	from emp e, dept d
	where e.deptno=d.deptno and e.mgr=#{mgr}
</select> 

<!-- join+subquery 의 조회 
		차량이미지, 제조사, 모델명, 연식, 가격, 옵션을 조회 하세요.
		가장 마지막에 입력된 차량부터 10건만 조회.(무조건)
-->  
<select id="joinSubquery" resultMap="carResult">
	select car_img, maker,model, car_year, price, car_option, to_char(hiredate,'yyyy-mm-dd hh24:mi') hiredate
	from (select car_img, maker,model, car_year, price, car_option, hiredate,
			row_number() over(order by hiredate desc) r_num
			from (select  cmo.car_img,cma.maker,cmo.model,cmo.car_year,cmo.price,cmo.car_option,cmo.hiredate
					from car_maker cma, car_model cmo
					where cmo.model=cma.model))
	where r_num between 1 and 10
</select>

<!-- 컬럼명 또는 테이블명이 동적일 때의 조회 
		//#은 사용할 수 없다
		반드시 parameterType이 VO라고 하고 ${getter}를 사용해야 한다.
		컬럼이 동일형으로 하나가 조회되는 경우에는 동적으로 사용 할 수 있으나
		컬럼이 여러개가 조회되는 경우에는 동적으로 사용하기 어렵다.
		
		테이블 명(EMP,CP_EMP2)이 외부에서 입력되고, 동일 컬럼이 조회되는 경우
		조회 컬럼 : EMPNO,ENAME,HIREDATE,SAL
		from 에 #이 들어가면 from ? 으로 인식하여 조회되지 않는다
-->  
<resultMap type="kr.co.sist.exam.domain.Demp" id="dynamicTable">
	<result column="empno" property="empno"/>
	<result column="ename" property="ename"/>
	<result column="hiredate" property="hiredate"/>
	<result column="sal" property="sal"/>
</resultMap>
<select id="dtable" resultMap="dynamicTable" parameterType="kr.co.sist.exam.vo.TnameVO">
	select empno,ename,hiredate,sal
	from ${tname}

</select>

<!-- dynamic query -OGNL : where,if,choose,foreach 반드시 VO    
	 if의 사용:
    	 EMP테이블에서 부서번호가 10~19사이면 10번부서사원 검색하고,
    	20~29번 사이면 20번 부서 사원 검색하고, 30~39번 사이면 30번 부서 조회
    	그렇지 않으면 전체 사원 조회 
-->
<resultMap type="kr.co.sist.exam.domain.Dynamicif" id="ifResult">
	<result column="empno" property="empno"/>
	<result column="deptno" property="deptno"/>
	<result column="ename" property="ename"/>
	<result column="job" property="job"/>
	<result column="hiredate" property="hiredate"/>
</resultMap>
<select id="dynamicif" resultMap="ifResult" parameterType="kr.co.sist.exam.vo.DeptnoVO">
	select empno, ename, job, deptno, to_char(hiredate,'yyyy-mm-dd') hiredate
	from emp
	<where>
		<if test="deptno &gt;= 10 and deptno &lt; 20">
			deptno=10
		</if>
		<if test="deptno &gt;= 20 and deptno &lt; 30">
			deptno=20
		</if>
		<if test="deptno &gt;= 30 and deptno &lt; 40">
			deptno=30
		</if>
	</where>
</select>

<!-- 숙제- 제조국|제조사|모델명 조회 -모델1 -->



<!-- procedure 호출 -->  
  
  
  
  
</mapper>